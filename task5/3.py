# 3  Создайте программу для игры в "Крестики-нолики"

from random import randint

tablo=[[0,0,0],[0,0,0],[0,0,0]]                                         # задаем матрицу табло
drw_n=['*'*9,'*'+' '*7+'*','*'+' '*3,'*'+' '*7+'*','*'*9]               # квадрат с цифрой
drw_x=['*'*9,'*   {1}   *','* {1} {1} {1} *','*   {1}   *','*'*9]       # квадрат c крестом
drw_o=['*'*9,'* {0} {0} {0} *','* {0}   {0} *','* {0} {0} {0} *','*'*9] # квадрат с кругом
nmb=lambda x:list(map(lambda s,a: s if s!='*'+' '*3 else s+str(a)+' '*3+'*',drw_n,[x]*len(drw_n))) # вставляем цифру в квадрат

chk=lambda x:1 if (x[2]==x[1]==x[0]==1) else 2 if (x[2]==x[1]==x[0]==2) else 0 # проверка 3х значений на совпадение, возвращаем совпавшее число(1,2)

check=lambda x:sum([chk(i) for i in tablo]+                      # проверка совпадений по горизонтали
    [chk(i) for i in [[i[j] for i in tablo] for j in range(3)]]+ # проверка по вертикали
    [chk([tablo[i][i] for i in range(3)])]+                      # проверка по диагонали влево
    [chk([tablo[-i-1][i] for i in range(3)])])                   # проверка по диагонали вправо
                                                                 # возвращаем число совпавшее три раза или ноль
ch_last,free=0,[0]                                   # задаем начальные значения

while(ch_last==0):             2                      # цикл для рисования и проверки конца игры
    for h in range(3):                               # перебор матрицы по столбцам
        for j in range(5):                           # перебор списка для квадратов
            for i in range(3):                       # перебор матрицы по строкам
                drw=[nmb(h*3+i+1)]+[drw_x]+[drw_o]   # собираем возможные варианты квадратов для текущей позиции
                print(drw[tablo[h][i]][j].format('\033[34m*\033[0m','\033[31m*\033[0m'),end='') # рисуем текущий квадрат согласно матрицы
            print()
    ch_last=check(tablo)                 # сохраняем предпоследнее значение статуса победы, чтобы зайти в цикл и сделать последний вывод
    if check(tablo)==0 and len(free)>0:  # проверка возможности хода игрока
        step=int(input('Ход игрока: '))  # запрос хода для игрока
        tablo=[[tablo[j][i] if j*3+i+1!=step else 1 for i in range(3)] for j in range(3)]                         # заносим ход игрока в матрицу
        free=list(filter((-1).__ne__,[i*3+j+1 if 2!=tablo[i][j]!=1 else -1 for i in range(3) for j in range(3)])) # проверяем наличие свободных клеток, создаем список с номерами
    else: ch_last=1               # если была победа или свободных клеток не осталось устанавливаем флаг выхода из цикла
    if len(free)>0:               # проверка возможности хода компьютера
        step_ai=free[randint(0, len(free)-1)]   # определяем ход компьютера из свободных клеток
        print('Ход компьютера:',step_ai)        # вывод хода компьютера
        tablo=[[tablo[j][i] if j*3+i+1!=step_ai else 2 for i in range(3)] for j in range(3)]    # заносим в матрицу
print('Победил',' игрок' if check(tablo)==1 else ' компьютер' if check(tablo)==2 else 'а ничья',sep='') # итоги игры